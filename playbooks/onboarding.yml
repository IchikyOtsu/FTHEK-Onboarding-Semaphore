- name: Onboarding automatique depuis fichier texte
  hosts: onboarding
  gather_facts: yes

  vars:
    inventaire_path: /tmp/semaphore/inventaire_ad.ini
    prefix_map:
      IT: "IT"
      HR: "HR"
      FIN: "FIN"
      COM: "COM"
    type_machine: "LAPTOP"

  tasks:
    - name: Lire le département depuis C:\departement.txt
      ansible.windows.win_shell: |
        Get-Content -Path 'C:\departement.txt'
      register: departement_raw

    - name: Nettoyer le nom du département
      set_fact:
        departement: "{{ departement_raw.stdout | trim }}"

    - name: Vérifier si le département est valide
      fail:
        msg: "Département '{{ departement }}' non reconnu"
      when: departement not in prefix_map

    - name: Générer le préfixe
      set_fact:
        prefix: "{{ prefix_map[departement] }}-{{ type_machine }}"

    - name: Télécharger l'inventaire actuel depuis Semaphore
      win_get_url:
        url: "http://{{ semaphore_ip }}/inventaire_ad.ini"
        dest: "C:\\Windows\\Temp\\inventaire_ad.ini"

    - name: Extraire les noms connus
      ansible.windows.win_shell: |
        Select-String -Path "C:\\Windows\\Temp\\inventaire_ad.ini" -Pattern "^([^\[]+)$" | ForEach-Object { ($_ -replace ".fonteynethekitchen.local","").Trim() }
      register: noms_raw

    - name: Convertir noms en liste
      set_fact:
        noms_existants: "{{ noms_raw.stdout_lines | unique }}"

    - name: Filtrer les noms correspondants
      set_fact:
        existants: "{{ noms_existants | select('match', '^' ~ prefix ~ '-\\d{3}$') | list }}"

    - name: Extraire les IDs utilisés
      set_fact:
        ids_utilises: "{{ existants | map('regex_replace', '^' ~ prefix ~ '-(\\d{3})$', '\\1') | map('int') | list }}"

    - name: Déterminer le plus petit ID libre
      set_fact:
        next_id: "{{ (range(1, 1000) | difference(ids_utilises | default([])) | list | min) | int }}"

    - name: Générer le nom final
      set_fact:
        new_hostname: "{{ prefix }}-{{ '%03d' | format(next_id) }}"

    - name: Afficher le nom généré
      debug:
        msg: "Nom à appliquer : {{ new_hostname }}"

    - name: Appliquer le nom de la machine
      ansible.windows.win_hostname:
        name: "{{ new_hostname }}"
      register: result

    - name: Redémarrer si nécessaire
      ansible.windows.win_reboot:
      when: result.changed

    - name: Envoyer le nom dans l’inventaire distant (via API, rsync, SMB, ou autre méthode)
      # à adapter selon ton mécanisme exact de mise à jour depuis Windows
      debug:
        msg: "Le nom {{ new_hostname }} devra être reporté dans l’inventaire sur Semaphore."
